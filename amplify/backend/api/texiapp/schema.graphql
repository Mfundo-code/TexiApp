enum RideMood {
  DRIVER
  PASSENGER
}

type Location {
  latitude: Float!
  longitude: Float!
  address: String
}

type Message @model @auth(rules: [
  { allow: owner },
  { allow: private, operations: [read, create] }
]) {
  id: ID!
  text: String!
  senderId: ID! @index(name: "bySender")
  receiverId: ID! @index(name: "byReceiver")
  rideId: ID! @index(name: "byRide")
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  sender: User @belongsTo(fields: ["senderId"])
  receiver: User @belongsTo(fields: ["receiverId"])
  ride: Ride @belongsTo(fields: ["rideId"])
}

type User @model @auth(rules: [
  { allow: owner, operations: [read, update, delete] },
  { allow: public, operations: [create] }
]) {
  id: ID!
  username: String!
  email: String! @auth(rules: [{ allow: owner }])
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  rides: [Ride] @hasMany(indexName: "byUser", fields: ["id"])
  sentMessages: [Message] @hasMany(indexName: "bySender", fields: ["id"])
  receivedMessages: [Message] @hasMany(indexName: "byReceiver", fields: ["id"])
}

type Ride @model @auth(rules: [
  { allow: owner, operations: [create, read, update, delete] },
  { allow: private, operations: [read] }
]) {
  id: ID!
  mood: RideMood! @index(name: "byMood", sortKeyFields: ["createdAt"])
  pickup: Location!
  dropoff: Location!
  userId: ID! @index(name: "byUser")
  user: User @belongsTo(fields: ["userId"])
  username: String!
  email: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  messages: [Message] @hasMany(indexName: "byRide", fields: ["id"])
}
type Post @model @auth(rules: [
  { allow: owner, operations: [create, read, update, delete] },
  { allow: private, operations: [read] }
]) {
  id: ID!
  content: String!
  userId: ID! @index(name: "byUser")
  user: User @belongsTo(fields: ["userId"])
  comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Comment @model @auth(rules: [
  { allow: owner, operations: [create, read, update, delete] },
  { allow: private, operations: [read] }
]) {
  id: ID!
  content: String!
  postId: ID! @index(name: "byPost")
  userId: ID! @index(name: "byUser")
  post: Post @belongsTo(fields: ["postId"])
  user: User @belongsTo(fields: ["userId"])
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}